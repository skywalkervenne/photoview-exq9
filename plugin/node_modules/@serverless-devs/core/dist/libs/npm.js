"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.findNpm = exports.findNpmModule = exports.loadNpm = exports.installNpm = exports.getCoreBaseDir = void 0;
var path_1 = require("path");
var fs_1 = require("fs");
var child_process_1 = require("child_process");
var assert_1 = __importDefault(require("assert"));
var os_1 = require("os");
var getCoreBaseDir = function () {
    return child_process_1.execSync('npm root').toString().replace(/\n$/, '');
};
exports.getCoreBaseDir = getCoreBaseDir;
function getNpmPath(scope, npmName, npmRegistry) {
    return __awaiter(this, void 0, void 0, function () {
        var findNmResult, currentNodeModules, localNpmPath, baseDir, pkgJson;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    findNmResult = exports.findNpmModule(scope.cwd || process.cwd(), npmName);
                    if (findNmResult) {
                        return [2 /*return*/, findNmResult];
                    }
                    currentNodeModules = exports.getCoreBaseDir();
                    localNpmPath = path_1.join(currentNodeModules, npmName);
                    if (fs_1.existsSync(localNpmPath)) {
                        return [2 /*return*/, localNpmPath];
                    }
                    baseDir = path_1.join(currentNodeModules, '../');
                    if (!fs_1.existsSync(baseDir)) {
                        baseDir = process.cwd();
                    }
                    pkgJson = path_1.join(baseDir, 'package.json');
                    if (!fs_1.existsSync(pkgJson)) {
                        fs_1.writeFileSync(pkgJson, '{}');
                    }
                    scope.coreInstance.cli.log("Installing " + npmName);
                    return [4 /*yield*/, installNpm({
                            baseDir: baseDir,
                            register: npmRegistry,
                            npmName: npmName,
                            mode: 'production --no-save',
                        })];
                case 1:
                    _a.sent();
                    return [2 /*return*/, path_1.join(baseDir, "node_modules/" + npmName)];
            }
        });
    });
}
// yarn: yarn add mod --dev
// npm: npm i mod --no-save
// yarn + lerna: yarn add mod --ignore-workspace-root-check
// npm + lerna: npm i mod --no-save
function installNpm(options) {
    return __awaiter(this, void 0, void 0, function () {
        var baseDir, _a, register, npmName, slience, registerPath, isLerna, _b, installCmd, mode, cmd;
        return __generator(this, function (_c) {
            baseDir = options.baseDir, _a = options.register, register = _a === void 0 ? 'npm' : _a, npmName = options.npmName, slience = options.slience, registerPath = options.registerPath, isLerna = options.isLerna;
            _b = options.installCmd, installCmd = _b === void 0 ? 'i' : _b, mode = options.mode;
            if (/yarn/.test(register)) {
                if (!options.installCmd) {
                    // yarn add
                    installCmd = 'add';
                }
                if (mode === undefined) {
                    mode = isLerna ? 'ignore-workspace-root-check' : 'dev';
                }
            }
            else if (mode === undefined) {
                mode = 'no-save';
            }
            cmd = register + " " + installCmd + " " + npmName + (mode ? " --" + mode : '') + (registerPath ? " --registry=" + registerPath : '');
            return [2 /*return*/, new Promise(function (resolved, rejected) {
                    var execProcess = child_process_1.exec(cmd, {
                        cwd: baseDir,
                    }, function (err, result) {
                        if (err) {
                            return rejected(err);
                        }
                        resolved(result.replace(/\n$/, '').replace(/^\s*|\s*$/, ''));
                    });
                    execProcess.stdout.on('data', function (data) {
                        if (!slience) {
                            console.log(data);
                        }
                    });
                })];
        });
    });
}
exports.installNpm = installNpm;
function loadNpm(scope, npmName, npmRegistry) {
    return __awaiter(this, void 0, void 0, function () {
        var npmPath, plugin, e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, getNpmPath(scope, npmName, npmRegistry)];
                case 1:
                    npmPath = _a.sent();
                    assert_1.default(npmPath, 'empty npm path');
                    plugin = require(npmPath);
                    scope.addPlugin(plugin);
                    return [3 /*break*/, 3];
                case 2:
                    e_1 = _a.sent();
                    return [3 /*break*/, 3];
                case 3: return [2 /*return*/];
            }
        });
    });
}
exports.loadNpm = loadNpm;
var findNpmModule = function (cwd, modName) {
    var modPath = path_1.join(cwd, 'node_modules', modName);
    if (fs_1.existsSync(modPath)) {
        return modPath;
    }
    var parentCwd = path_1.join(cwd, '../');
    if (parentCwd !== cwd) {
        return exports.findNpmModule(parentCwd, modName);
    }
};
exports.findNpmModule = findNpmModule;
var findNpm = function (argv) {
    var npm = 'npm';
    var registry = '';
    // 先找npm客户端
    if (argv === null || argv === void 0 ? void 0 : argv.npm) {
        npm = argv.npm;
    }
    else if (process.env.npm_config_user_agent &&
        /yarn/.test(process.env.npm_config_user_agent)) {
        npm = 'yarn';
    }
    else if (process.env.npm_execpath &&
        /yarn/.test(process.env.npm_execpath)) {
        npm = 'yarn';
    }
    else if (process.env.yarn_registry) {
        npm = 'yarn';
    }
    else {
        var npmList = ['cnpm'];
        var currentPlatform_1 = os_1.platform();
        // eslint-disable-next-line
        var cmd = npmList.find(function (cmd) {
            if (currentPlatform_1 === 'win32') {
                // for windows
                try {
                    var find = child_process_1.execSync("where " + cmd).toString();
                    // windows的命令路径至少会有 C/D/E:\ 前缀
                    if (find.indexOf(':\\') !== -1) {
                        return cmd;
                    }
                }
                catch (_a) {
                    //
                }
            }
            else {
                // for mac/linux
                try {
                    var find = child_process_1.execSync("which " + cmd).toString();
                    // 没有找到not found
                    if (find.indexOf('not found') === -1) {
                        return cmd;
                    }
                }
                catch (_b) {
                    //
                }
            }
        });
        if (cmd) {
            npm = cmd;
        }
    }
    // registry
    if ((argv === null || argv === void 0 ? void 0 : argv.registry) !== undefined) {
        registry = argv.registry || '';
    }
    else if (npm === 'yarn' && process.env.yarn_registry) {
        registry = process.env.yarn_registry;
    }
    else if (process.env.npm_config_registry) {
        registry = process.env.npm_config_registry;
    }
    else {
        // language is zh_CN
        // eslint-disable-next-line no-lonely-if
        if (process.env.LANG === 'zh_CN.UTF-8') {
            registry = 'https://registry.npm.taobao.org';
        }
    }
    return {
        cmd: "" + npm + (registry ? " --registry=" + registry : ''),
        npm: npm,
        registry: registry,
    };
};
exports.findNpm = findNpm;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnBtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xpYnMvbnBtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDZCQUE0QjtBQUM1Qix5QkFBK0M7QUFDL0MsK0NBQStDO0FBQy9DLGtEQUE0QjtBQUM1Qix5QkFBOEI7QUFFdkIsSUFBTSxjQUFjLEdBQUc7SUFDNUIsT0FBTyx3QkFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDNUQsQ0FBQyxDQUFDO0FBRlcsUUFBQSxjQUFjLGtCQUV6QjtBQUVGLFNBQWUsVUFBVSxDQUN2QixLQUFVLEVBQ1YsT0FBZSxFQUNmLFdBQW9COzs7Ozs7b0JBRWQsWUFBWSxHQUFHLHFCQUFhLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7b0JBQ3hFLElBQUksWUFBWSxFQUFFO3dCQUNoQixzQkFBTyxZQUFZLEVBQUM7cUJBQ3JCO29CQUNLLGtCQUFrQixHQUFHLHNCQUFjLEVBQUUsQ0FBQztvQkFDdEMsWUFBWSxHQUFHLFdBQUksQ0FBQyxrQkFBa0IsRUFBRSxPQUFPLENBQUMsQ0FBQztvQkFDdkQsSUFBSSxlQUFVLENBQUMsWUFBWSxDQUFDLEVBQUU7d0JBQzVCLHNCQUFPLFlBQVksRUFBQztxQkFDckI7b0JBRUcsT0FBTyxHQUFHLFdBQUksQ0FBQyxrQkFBa0IsRUFBRSxLQUFLLENBQUMsQ0FBQztvQkFDOUMsSUFBSSxDQUFDLGVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRTt3QkFDeEIsT0FBTyxHQUFHLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQztxQkFDekI7b0JBQ0ssT0FBTyxHQUFHLFdBQUksQ0FBQyxPQUFPLEVBQUUsY0FBYyxDQUFDLENBQUM7b0JB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