"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = __importDefault(require("lodash"));
var table_layout_1 = __importDefault(require("table-layout"));
var chalk_1 = require("chalk");
var utils_1 = require("../libs/utils");
var keyFn = function (list) { return lodash_1.default.first(lodash_1.default.keys(list)); };
var descFn = function (list) { return lodash_1.default.first(lodash_1.default.values(list)); };
var publishHelper = {
    /**
       *
       * Options: [
              {'--debug': 'Open debug model.'},
              {'--skip-actions': 'Skip the extends section.'},
              {'-t, --template <path>': 'Specify the template file.'},
              {'-a, --access <aliasName>': 'Specify the access alias name.'},
              {'-v, --version': 'Output the version number.'},
              {'-h, --help': 'Display help for command.'},
          ]
       * @param list
       */
    maxLen: function (list) {
        list = lodash_1.default.isArray(list) ? list : lodash_1.default.map(list, function (item, key) {
            var _a;
            return (_a = {}, _a[key] = item, _a);
        });
        return (lodash_1.default.map(list, function (item) { return keyFn(item); }).reduce(function (a, c) {
            return Math.max(a, c.length);
        }, 0) + 2);
    },
    /**
     *
     * @param list 初始化数据
     * @param title 名称
     * @param length 整体长度
     * @param leftPad 距离左侧长度
     * @returns
     */
    helpInfo: function (list, title, length, leftPad) {
        if (leftPad === void 0) { leftPad = 0; }
        if (lodash_1.default.isPlainObject(list) && lodash_1.default.isObject(descFn(list))) {
            return ("" + chalk_1.underline(chalk_1.bold(title)) +
                lodash_1.default.reduce(list, function (total, item, key) {
                    total += "\n" + publishHelper.helpInfo(item, key, length - 2, 2);
                    return total;
                }, ''));
        }
        list = lodash_1.default.isArray(list)
            ? lodash_1.default.map(list, function (item) { return ({
                command: [keyFn(item)],
                desc: descFn(item),
            }); })
            : lodash_1.default.map(list, function (item, key) { return ({ command: key, desc: item }); });
        if (lodash_1.default.isEmpty(list)) {
            return '';
        }
        var proxy = list.map(function (row) {
            return new Proxy(row, {
                get: function (target, property, receiver) {
                    if (property === 'desc') {
                        return "" + utils_1.makeUnderLine(target.desc);
                    }
                    else {
                        return Reflect.get(target, property, receiver);
                    }
                },
            });
        });
        return ("" + lodash_1.default.repeat(' ', leftPad) + (leftPad ? chalk_1.bold(title) : chalk_1.underline(chalk_1.bold(title))) + "\n" +
            new table_layout_1.default(proxy, {
                padding: { left: lodash_1.default.repeat(' ', leftPad + 2) },
                columns: [
                    {
                        name: 'command',
                        width: length + 2,
                    },
                ],
            }).toString());
        // `${_.repeat(' ', leftPad)}${leftPad?bold(title):underline(bold(title))}\n` + _.reduce(list, (total, item) => {
        //     let description = descFn(item);
        //     total+= (
        //         '  ' + _.padEnd(wrap(keyFn(item), {indent: _.repeat(' ', leftPad)}), length + 2) + wrap(description, {width: 80} ) + '\n');
        //     return total;
        //     },'')
    },
};
exports.default = publishHelper;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGlzaEhlbHAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tbW9uL3B1Ymxpc2hIZWxwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsa0RBQXVCO0FBQ3ZCLDhEQUF1QztBQUN2QywrQkFBd0M7QUFDeEMsdUNBQThDO0FBRTlDLElBQU0sS0FBSyxHQUFHLFVBQUMsSUFBSSxJQUFLLE9BQUEsZ0JBQUMsQ0FBQyxLQUFLLENBQUMsZ0JBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBckIsQ0FBcUIsQ0FBQztBQUM5QyxJQUFNLE1BQU0sR0FBRyxVQUFDLElBQUksSUFBSyxPQUFBLGdCQUFDLENBQUMsS0FBSyxDQUFDLGdCQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQXZCLENBQXVCLENBQUM7QUFFakQsSUFBTSxhQUFhLEdBQUc7SUFDcEI7Ozs7Ozs7Ozs7O1NBV0s7SUFDTCxNQUFNLEVBQUUsVUFBQyxJQUFJO1FBQ1gsSUFBSSxHQUFHLGdCQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLGdCQUFDLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxVQUFDLElBQUksRUFBRSxHQUFHOztZQUFLLE9BQUEsVUFBRyxHQUFDLEdBQUcsSUFBRyxJQUFJLEtBQUc7UUFBakIsQ0FBaUIsQ0FBQyxDQUFDO1FBQzlFLE9BQU8sQ0FDTCxnQkFBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsVUFBQyxJQUFJLElBQUssT0FBQSxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQVgsQ0FBVyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQUMsQ0FBQyxFQUFFLENBQUM7WUFDN0MsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDL0IsQ0FBQyxFQUFFLENBQUMsQ0FBQyxH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