"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ignoreZip = void 0;
var fs_extra_1 = __importDefault(require("fs-extra"));
var lodash_1 = __importDefault(require("lodash"));
var archiver_1 = __importDefault(require("archiver"));
var lodash_2 = require("lodash");
var chalk_1 = require("chalk");
var path_1 = __importDefault(require("path"));
var readline_1 = __importDefault(require("readline"));
var s_progress_bar_1 = require("@serverless-devs/s-progress-bar");
var error_1 = require("../error");
var logger_1 = require("../../logger");
var ignoreWalk_1 = __importDefault(require("../ignoreWalk"));
var isWindows = process.platform === 'win32';
function ignoreZip(options) {
    return __awaiter(this, void 0, void 0, function () {
        var codeUri, ignoreFiles, include, outputFileName, _a, outputFilePath, _i, include_1, file, fsStat, fileName, output, zipArchiver, count;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    codeUri = options.codeUri, ignoreFiles = options.ignoreFiles, include = options.include, outputFileName = options.outputFileName, _a = options.outputFilePath, outputFilePath = _a === void 0 ? './' : _a;
                    return [4 /*yield*/, fs_extra_1.default.pathExists(codeUri)];
                case 1:
                    // 处理文件前的校验
                    if (!(_b.sent())) {
                        throw new error_1.CatchableError("CodeUri: " + codeUri + " is not exist");
                    }
                    if (!!lodash_1.default.isEmpty(include)) return [3 /*break*/, 5];
                    _i = 0, include_1 = include;
                    _b.label = 2;
                case 2:
                    if (!(_i < include_1.length)) return [3 /*break*/, 5];
                    file = include_1[_i];
                    return [4 /*yield*/, fs_extra_1.default.pathExists(file)];
                case 3:
                    // 处理文件前的校验
                    if (!(_b.sent())) {
                        throw new error_1.CatchableError("CodeUri: " + file + " is not exist");
                    }
                    _b.label = 4;
                case 4:
                    _i++;
                    return [3 /*break*/, 2];
                case 5: return [4 /*yield*/, fs_extra_1.default.stat(codeUri)];
                case 6:
                    fsStat = _b.sent();
                    if (fsStat.isFile() && !lodash_1.default.isEmpty(ignoreFiles) && !lodash_1.default.isEmpty(include)) {
                        logger_1.logger.warn(codeUri + " is file, and Include/ignore was not provided");
                    }
                    fileName = outputFileName ? outputFileName : 'demo.zip';
                    return [4 /*yield*/, fs_extra_1.default.ensureDir(outputFilePath)];
                case 7:
                    _b.sent();
                    output = fs_extra_1.default.createWriteStream(path_1.default.join(outputFilePath, fileName));
                    logger_1.logger.debug('Packing ...');
                    zipArchiver = archiver_1.default('zip', { zlib: { level: 9 } })
                        .on('warning', function (err) { return logger_1.logger.warn(err); })
                        .on('error', function (err) { throw err; });
                    zipArchiver.pipe(output);
                    return [4 /*yield*/, zipTo(codeUri, zipArchiver, ignoreFiles)];
                case 8:
                    count = _b.sent();
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            var bar;
                            zipArchiver.on('progress', function (processOptions) {
                                if (!bar) {
                                    bar = new s_progress_bar_1.ProgressService(s_progress_bar_1.ProgressType.Bar, { total: lodash_2.get(processOptions, 'fs.totalBytes') }, chalk_1.green('ziping') + " ((:bar)) :current/:total(Bytes) :percent :etas");
                                }
                                bar.update(lodash_2.get(processOptions, 'fs.processedBytes'));
                            });
                            output.on('close', function () {
                                var compressedSize = zipArchiver.pointer();
                                logger_1.logger.debug('Package complete.');
                                resolve({ count: count, compressedSize: compressedSize });
                            });
                            try {
                                zipArchiver.finalize();
                            }
                            catch (err) {
                                reject(err);
                            }
                        })];
                case 9: return [2 /*return*/, _b.sent()];
            }
        });
    });
}
exports.ignoreZip = ignoreZip;
function zipTo(codeUri, zipArchiver, ignoreFiles) {
    if (ignoreFiles === void 0) { ignoreFiles = []; }
    return __awaiter(this, void 0, void 0, function () {
        var absCodeUri, fsStat, isBootstrap, zipFiles;
        var _this = this;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    absCodeUri = path_1.default.resolve(codeUri);
                    return [4 /*yield*/, fs_extra_1.default.stat(codeUri)];
                case 1:
                    fsStat = _a.sent();
                    // 处理单个文件
                    if (fsStat.isFile()) {
                        isBootstrap = isBootstrapPath(absCodeUri, absCodeUri, true);
                        zipArchiver.file(absCodeUri, {
                            name: path_1.default.basename(codeUri),
                            mode: isBootstrap ? fsStat.mode | 73 : fsStat.mode,
                        });
                        return [2 /*return*/, 1];
                    }
                    zipFiles = ignoreWalk_1.default.sync({
                        ignoreFiles: ignoreFiles,
                        path: codeUri,
                        includeEmpty: true,
                    });
                    logger_1.logger.debug("zip files list:: " + zipFiles);
                    return [4 /*yield*/, Promise.all(zipFiles.map(function (f) { return __awaiter(_this, void 0, void 0, function () {
                            var fPath, s, error_2, absFilePath, relative, isBootstrap, content, target;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        fPath = path_1.default.join(codeUri, f);
                                        _a.label = 1;
                                    case 1:
                                        _a.trys.push([1, 3, , 4]);
                                        return [4 /*yield*/, fs_extra_1.default.lstat(fPath)];
                                    case 2:
                                        s = _a.sent();
                                        return [3 /*break*/, 4];
                                    case 3:
                                        error_2 = _a.sent();
                                        logger_1.logger.log("Before zip: could not found fPath " + fPath + ", absolute fPath is " + path_1.default.resolve(fPath) + ", exception is " + error_2 + ", skiping");
                                        return [2 /*return*/, 0];
                                    case 4:
                                        absFilePath = path_1.default.resolve(fPath);
                                        relative = path_1.default.relative(absCodeUri, absFilePath);
                                        isBootstrap = isBootstrapPath(absFilePath, absCodeUri, false);
                                        if (!(s.size === 1067)) return [3 /*break*/, 6];
                                        return [4 /*yield*/, readLines(fPath)];
                                    case 5:
                                        content = _a.sent();
                                        if (content[0] === 'XSym' && content.length === 5) {
                                            target = content[3];
                                            zipArchiver.symlink(relative, target, {
                                                mode: isBootstrap || isWindows ? s.mode | 73 : s.mode,
                                            });
                                            return [2 /*return*/, 1];
                                        }
                                        _a.label = 6;
                                    case 6:
                                        zipArchiver.file(fPath, {
                                            name: relative,
                                            mode: isBootstrap || isWindows ? s.mode | 73 : s.mode,
                                            stats: s,
                                        });
                                        return [2 /*return*/, 1];
                                }
                            });
                        }); }))];
                case 2:
                    _a.sent();
                    return [2 /*return*/, zipFiles.length];
            }
        });
    });
}
function isBootstrapPath(absFilePath, absCodeUri, isFile) {
    if (isFile === void 0) { isFile = true; }
    var absBootstrapDir;
    if (isFile) {
        absBootstrapDir = path_1.default.dirname(absCodeUri);
    }
    else {
        absBootstrapDir = absCodeUri;
    }
    return path_1.default.join(absBootstrapDir, 'bootstrap') === absFilePath;
}
function readLines(fileName) {
    return new Promise(function (resolve, reject) {
        var lines = [];
        readline_1.default
            .createInterface({ input: fs_extra_1.default.createReadStream(fileName) })
            .on('line', function (line) { return lines.push(line); })
            .on('close', function () { return resolve(lines); })
            .on('error', reject);
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWdub3JlLXppcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vemlwL2lnbm9yZS16aXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsc0RBQTBCO0FBQzFCLGtEQUF1QjtBQUN2QixzREFBZ0M7QUFDaEMsaUNBQTZCO0FBQzdCLCtCQUE4QjtBQUM5Qiw4Q0FBd0I7QUFDeEIsc0RBQWdDO0FBQ2hDLGtFQUFnRjtBQUNoRixrQ0FBMEM7QUFDMUMsdUNBQXNDO0FBQ3RDLDZEQUF1QztBQUV2QyxJQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsUUFBUSxLQUFLLE9BQU8sQ0FBQztBQVUvQyxTQUFzQixTQUFTLENBQUUsT0FBc0I7Ozs7OztvQkFDN0MsT0FBTyxHQUFrRSxPQUFPLFFBQXpFLEVBQUUsV0FBVyxHQUFxRCxPQUFPLFlBQTVELEVBQUUsT0FBTyxHQUE0QyxPQUFPLFFBQW5ELEVBQUUsY0FBYyxHQUE0QixPQUFPLGVBQW5DLEVBQUUsS0FBMEIsT0FBTyxlQUFaLEVBQXJCLGNBQWMsbUJBQUcsSUFBSSxLQUFBLENBQWE7b0JBR25GLHFCQUFNLGtCQUFFLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFBOztvQkFEbEMsV0FBVztvQkFDWCxJQUFJLENBQUMsQ0FBQyxTQUE0QixDQUFDLEVBQUU7d0JBQ25DLE1BQU0sSUFBSSxzQkFBYyxDQUFDLGNBQVksT0FBTyxrQkFBZSxDQUFDLENBQUM7cUJBQzlEO3lCQUNHLENBQUMsZ0JBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQW5CLHdCQUFtQjswQkFDSyxFQUFQLG1CQUFPOzs7eUJBQVAsQ0FBQSxxQkFBTyxDQUFBO29CQUFmLElBQUk7b0JBRVAscUJBQU0sa0JBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUE7O29CQUQvQixXQUFXO29CQUNYLElBQUksQ0FB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