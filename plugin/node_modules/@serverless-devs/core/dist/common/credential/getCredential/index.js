"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCredentialAliasList = exports.getCredentialFromEnv = exports.decryptCredential = void 0;
var inquirer_1 = __importDefault(require("inquirer"));
var getAccess_1 = __importDefault(require("./getAccess"));
var setCredential_1 = __importDefault(require("../setCredential"));
var lodash_1 = require("lodash");
var os_1 = __importDefault(require("os"));
var path_1 = __importDefault(require("path"));
var libs_1 = require("../../../libs");
var logger_1 = require("../../../logger");
var chalk_1 = __importDefault(require("chalk"));
var utils_1 = require("./utils");
var constant_1 = require("../../constant");
var run_1 = __importDefault(require("@serverless-devs/acc/commands/run"));
var fs_extra_1 = __importDefault(require("fs-extra"));
var getAccountId_1 = __importDefault(require("../getAccountId"));
var Crypto = require('crypto-js');
function decryptCredential(info) {
    var cloneInfo = Object.assign({}, info);
    Object.keys(cloneInfo).forEach(function (key) {
        try {
            var bytes = Crypto.AES.decrypt(cloneInfo[key], 'SecretKey123');
            cloneInfo[key] = bytes.toString(Crypto.enc.Utf8) || cloneInfo[key];
        }
        catch (error) {
            // ignore error
        }
    });
    return cloneInfo;
}
exports.decryptCredential = decryptCredential;
function getCredential() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return __awaiter(this, void 0, void 0, function () {
        var first, second, rest, access, params, inputs, result;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    first = args[0], second = args[1], rest = args.slice(2);
                    params = [];
                    if (typeof first === 'object') {
                        inputs = first;
                        access = second;
                        params = rest;
                    }
                    else {
                        access = first;
                        params = second ? __spreadArrays([second], rest) : [];
                    }
                    if (!(access === constant_1.ALIYUN_CLI)) return [3 /*break*/, 2];
                    return [4 /*yield*/, getAcc()];
                case 1:
                    result = _a.sent();
                    return [3 /*break*/, 4];
                case 2: return [4 /*yield*/, getCredentialWithAccess.apply(void 0, __spreadArrays([access], params))];
                case 3:
                    result = _a.sent();
                    _a.label = 4;
                case 4:
                    utils_1.transformInputs(inputs, result);
                    return [2 /*return*/, result];
            }
        });
    });
}
function getAcc() {
    return __awaiter(this, void 0, void 0, function () {
        var configPath, accData_1, error_1, stockData, findObj, info, tmp;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    configPath = process.env.ALIBABACLOUD_CONFIG || constant_1.ALIYUN_CONFIG_FILE;
                    if (!fs_extra_1.default.existsSync(configPath)) return [3 /*break*/, 6];
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, new run_1.default().run([])];
                case 2:
                    accData_1 = _a.sent();
                    return [3 /*break*/, 4];
                case 3:
                    error_1 = _a.sent();
                    logger_1.logger.debug(error_1);
                    return [3 /*break*/, 4];
                case 4:
                    if (!((accData_1 === null || accData_1 === void 0 ? void 0 : accData_1.AccessKeyID) && (accData_1 === null || accData_1 === void 0 ? void 0 : accData_1.AccessKeySecret))) return [3 /*break*/, 6];
                    stockData = libs_1.getConfig('acc');
                    findObj = lodash_1.find(stockData, function (o) { return o.AccessKeyID === accData_1.AccessKeyID; });
                    if (findObj) {
                        return [2 /*return*/, __assign(__assign({}, accData_1), { AccountID: findObj.AccountId, Alias: constant_1.ALIYUN_CLI })];
                    }
                    return [4 /*yield*/, getAccountId_1.default(accData_1)];
                case 5:
                    info = _a.sent();
                    tmp = [
                        {
                            AccountId: info.AccountId,
                            AccessKeyID: accData_1.AccessKeyID,
                        },
                    ];
                    libs_1.setConfig('acc', stockData ? lodash_1.concat(stockData, tmp) : tmp);
                    return [2 /*return*/, __assign(__assign({}, accData_1), { AccountID: info.AccountId, Alias: constant_1.ALIYUN_CLI })];
                case 6: return [2 /*return*/];
            }
        });
    });
}
function formatValue(content, alias) {
    var formatObj = decryptCredential(content[alias]);
    if (Object.prototype.hasOwnProperty.call(formatObj, 'AccountID')) {
        return __assign(__assign({ Alias: alias }, formatObj), { AccountID: typeof formatObj.AccountID === 'string' ? formatObj.AccountID : String(formatObj.AccountID) });
    }
    return __assign({ Alias: alias }, formatObj);
}
/**
 * @param access 可选参数，密钥的别名
 * @param args 可选参数，接收设置密钥的key，如果不传新建密钥的时候，方法内部提供了设置密钥的相关模版
 */
function getCredentialWithAccess(access) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    return __awaiter(this, void 0, void 0, function () {
        var accessAlias, data, accessContent, accessKeys, result_1, userInfo, choices, selectAccess, res, result;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    accessAlias = access || 'default';
                    return [4 /*yield*/, getCredentialFromEnv(access)];
                case 1:
                    data = _a.sent();
                    if (data) {
                        return [2 /*return*/, data];
                    }
                    return [4 /*yield*/, getAccess_1.default(accessAlias)];
                case 2:
                    accessContent = _a.sent();
                    accessKeys = Object.keys(accessContent);
                    // 找到已经创建过的密钥，直接返回密钥信息
                    if (accessKeys.length > 0) {
                        result_1 = formatValue(accessContent, accessAlias);
                        logger_1.logger.debug("access information: " + JSON.stringify(result_1, null, 2));
                        return [2 /*return*/, utils_1.trim(result_1)];
                    }
                    return [4 /*yield*/, libs_1.getYamlContent(path_1.default.join(libs_1.getRootHome(), 'access.yaml'))];
                case 3:
                    userInfo = _a.sent();
                    choices = [];
                    if (userInfo) {
                        choices = Object.keys(userInfo).map(function (item) { return ({
                            name: item,
                            value: item,
                        }); });
                    }
                    choices = [
                        {
                            name: accessAlias + " is not found, select this option to exit",
                            value: 'over',
                        },
                    ]
                        .concat(choices)
                        .concat([{ name: 'Create a new account', value: 'create' }]);
                    return [4 /*yield*/, inquirer_1.default.prompt([
                            {
                                type: 'list',
                                name: 'access',
                                message: 'Please select an access:',
                                choices: choices,
                            },
                        ])];
                case 4:
                    selectAccess = (_a.sent()).access;
                    if (selectAccess === 'over')
                        return [2 /*return*/];
                    if (!(selectAccess === 'create')) return [3 /*break*/, 6];
                    return [4 /*yield*/, setCredential_1.default.apply(void 0, args)];
                case 5:
                    res = _a.sent();
                    return [2 /*return*/, utils_1.trim(res)];
                case 6:
                    result = formatValue(userInfo, selectAccess);
                    logger_1.logger.warn("\n\n" + (os_1.default.platform() == 'win32' ? '' : '🤡') + "   If you don't want to select access every time, configure it in yaml\uFF1A" + chalk_1.default.underline.cyan('https://github.com/Serverless-Devs/Serverless-Devs/discussions/149') + "\n\n");
                    logger_1.logger.debug("access information: " + JSON.stringify(result, null, 2));
                    return [2 /*return*/, utils_1.trim(result)];
            }
        });
    });
}
function getCredentialFromEnv(access) {
    return __awaiter(this, void 0, void 0, function () {
        var AccountKeyIDFromEnv, AccessKeySecretFromEnv, AccountIDFromEnv, serverlessDevsAccessFromEnv;
        return __generator(this, function (_a) {
            require('dotenv').config();
            AccountKeyIDFromEnv = lodash_1.get(process, 'env.AccessKeyID');
            AccessKeySecretFromEnv = lodash_1.get(process, 'env.AccessKeySecret');
            AccountIDFromEnv = lodash_1.get(process, 'env.AccountID');
            if (AccountKeyIDFromEnv &&
                AccessKeySecretFromEnv &&
                AccountIDFromEnv &&
                process.env.serverless_devs_temp_argv !== '["config","get"]') {
                return [2 /*return*/, utils_1.trim({
                        Alias: 'default_serverless_devs_access',
                        AccountID: AccountIDFromEnv,
                        AccessKeyID: AccountKeyIDFromEnv,
                        AccessKeySecret: AccessKeySecretFromEnv,
                        SecurityToken: lodash_1.get(process, 'env.SecurityToken'),
                    })];
            }
            serverlessDevsAccessFromEnv = utils_1.getServerlessDevsAccessFromEnv(access);
            if (serverlessDevsAccessFromEnv) {
                return [2 /*return*/, utils_1.trim(serverlessDevsAccessFromEnv)];
            }
            return [2 /*return*/];
        });
    });
}
exports.getCredentialFromEnv = getCredentialFromEnv;
var getCredentialAliasList = function () { return __awaiter(void 0, void 0, void 0, function () {
    var accessList, accessInfo, data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                accessList = [];
                return [4 /*yield*/, libs_1.getYamlContent(path_1.default.join(libs_1.getRootHome(), 'access.yaml'))];
            case 1:
                accessInfo = _a.sent();
                if (accessInfo) {
                    accessList = lodash_1.keys(accessInfo);
                }
                return [4 /*yield*/, getCredentialFromEnv()];
            case 2:
                data = _a.sent();
                if (data) {
                    accessList = lodash_1.filter(accessList, function (o) { return o !== data.Alias; });
                    accessList.push(data.Alias);
                }
                return [2 /*return*/, accessList];
        }
    });
}); };
exports.getCredentialAliasList = getCredentialAliasList;
exports.default = getCredential;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tbW9uL2NyZWRlbnRpYWwvZ2V0Q3JlZGVudGlhbC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzREFBZ0M7QUFDaEMsMERBQW9DO0FBQ3BDLG1FQUE2QztBQUM3QyxpQ0FBeUQ7QUFDekQsMENBQW9CO0FBQ3BCLDhDQUF3QjtBQUN4QixzQ0FBa0Y7QUFDbEYsMENBQXlDO0FBQ3pDLGdEQUEwQjtBQUMxQixpQ0FBZ0Y7QUFDaEYsMkNBQWdFO0FBQ2hFLDBFQUFvRDtBQUNwRCxzREFBMEI7QUFDMUIsaUVBQTJDO0FBRTNDLElBQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUVwQyxTQUFnQixpQkFBaUIsQ0FBQyxJQUE0QjtJQUM1RCxJQUFNLFNBQVMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUMxQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFDLEdBQUc7UUFDakMsSUFBSTtZQUNGLElBQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsRUFBRSxjQUFjLENBQUMsQ0FBQztZQUNqRSxTQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNwRTtRQUFDLE9BQU8sS0FBSyxFQUFFO1lBQ2QsZUFBZTtTQUNoQjtJQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxTQUFTLENBQUM7QUFDbkIsQ0FBQztBQVhELDhDQVdD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